version: "3"
services:
  python-application:
    build:
      context: .
    container_name: python-application
    image: python-application
    ports:
      - "5000:5000"
    networks:
        appnet:
            ipv4_address: 172.172.0.10
  prometheus:
    container_name: prometheus-svc
    image: prom/prometheus
    ports: 
      - "9090:9090"
    networks:
        appnet:
            ipv4_address: 172.172.0.20
    command: --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
  grafana:
    container_name: grafana
    image: grafana/grafana:5.0.4
    ports:
      - "3000:3000"
    networks:
        appnet:
            ipv4_address: 172.172.0.30
    environment:
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  grafana-dashboards:
    image: alpine:3.10
    depends_on:
      - grafana
    volumes:
      - /home/cezary/Pulpit/studia/zaliczenie/Blog/grafana-data:/grafana
    command: >
      /bin/sh -c "
        apk add --no-cache curl && \
        echo 'waiting for grafana' && \
        sleep 5s && \
        cd /grafana && \
        curl --request POST http://grafana:3000/api/datasources --header 'Content-Type: application/json' -d @datasources.json && \
        curl --request POST http://grafana:3000/api/dashboards/db --header 'Content-Type: application/json' -d @dashboard.json"

networks:
    appnet:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: "172.172.0.0/16"